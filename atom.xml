<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星辰大海</title>
  <icon>https://www.junpzx.cn/icon.png</icon>
  <subtitle>Starry Sea</subtitle>
  <link href="https://www.junpzx.cn/atom.xml" rel="self"/>
  
  <link href="https://www.junpzx.cn/"/>
  <updated>2021-03-22T05:31:34.590Z</updated>
  <id>https://www.junpzx.cn/</id>
  
  <author>
    <name>JunPzx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>TCP三次握手与四次挥手</title>
    <link href="https://www.junpzx.cn/posts/15553.html"/>
    <id>https://www.junpzx.cn/posts/15553.html</id>
    <published>2021-03-22T01:57:54.000Z</published>
    <updated>2021-03-22T05:31:34.590Z</updated>
    
    
    <summary type="html">&lt;p&gt;我们知道网络层，可以实现两个主机之间的通信。但是这并不具体，因为，真正进行通信的实体是在主机中的进程，是一个主机中的一个进程与另外一个主机中的一个进程在交换数据。IP协议虽然能把数据报文送到目的主机，但是并没有交付给主机的具体应用进程。而端到端的通信才应该是应用进程之间的通信。&lt;/p&gt;
&lt;p&gt;UDP，在传送数据前不需要先建立连接，远地的主机在收到UDP报文后也不需要给出任何确认。虽然UDP不提供可靠交付，但是正是因为这样，省去和很多的开销，使得它的速度比较快，比如一些对实时性要求较高的服务，就常常使用的是UDP。对应的应用层的协议主要有 DNS,TFTP,DHCP,SNMP,NFS 等。&lt;/p&gt;
&lt;p&gt;TCP，提供面向连接的服务，在传送数据之前必须先建立连接，数据传送完成后要释放连接。因此TCP是一种可靠的的运输服务，但是正因为这样，不可避免的增加了许多的开销，比如确认，流量控制等。对应的应用层的协议主要有 SMTP,TELNET,HTTP,FTP 等。&lt;br&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="网络" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="TCP" scheme="https://www.junpzx.cn/tags/TCP/"/>
    
  </entry>
  
  <entry>
    <title>Git使用</title>
    <link href="https://www.junpzx.cn/posts/54372.html"/>
    <id>https://www.junpzx.cn/posts/54372.html</id>
    <published>2021-03-12T06:47:27.000Z</published>
    <updated>2021-03-12T07:08:38.774Z</updated>
    
    
    <summary type="html">&lt;p&gt;Git的常用场景的使用方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20210312150355.png&quot; alt=&quot;Git&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="Git" scheme="https://www.junpzx.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>XSD与DTD区别和联系</title>
    <link href="https://www.junpzx.cn/posts/40227.html"/>
    <id>https://www.junpzx.cn/posts/40227.html</id>
    <published>2021-02-02T01:36:41.000Z</published>
    <updated>2021-02-02T01:43:08.216Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天在看Spring源码的时候，发现其中存在一个spring.schemas文件，发现其中有很多关于xsd文件的路径，所以记录一下xsd文件到底有什么作用，以及它和其他XML文档描述文件的区别和联系。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="其它" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="DTD" scheme="https://www.junpzx.cn/tags/DTD/"/>
    
    <category term="XSD" scheme="https://www.junpzx.cn/tags/XSD/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式语法</title>
    <link href="https://www.junpzx.cn/posts/48428.html"/>
    <id>https://www.junpzx.cn/posts/48428.html</id>
    <published>2021-02-01T13:40:02.000Z</published>
    <updated>2021-02-01T14:23:59.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;（英语：Regular Expression，常简写为regex、regexp或RE），又称&lt;strong&gt;正则表示式&lt;/strong&gt;、&lt;strong&gt;正则表示法&lt;/strong&gt;、&lt;strong&gt;规则表达式&lt;/strong&gt;、&lt;strong&gt;常规表示法&lt;/strong&gt;，是计算机科学的一个概念。正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。在很多文本编辑器里，正则表达式通常被用来检索、替换那些匹配某个模式的文本。&lt;/p&gt;
&lt;p&gt;许多程序设计语言都支持利用正则表达式进行字符串操作。例如，在Perl中就内建了一个功能强大的正则表达式引擎。正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(σ｀д′)σ这是我写过的最麻烦的一篇,Markdown语法渲染出来的东西一直不对,主要还是符号太多了,如果文章中有错漏的或者格式不正确的,麻烦在评论中告知!&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="其它" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="正则表达式" scheme="https://www.junpzx.cn/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
    <category term="Regex" scheme="https://www.junpzx.cn/tags/Regex/"/>
    
  </entry>
  
  <entry>
    <title>MockJS语法</title>
    <link href="https://www.junpzx.cn/posts/1114.html"/>
    <id>https://www.junpzx.cn/posts/1114.html</id>
    <published>2021-01-27T09:40:48.000Z</published>
    <updated>2021-01-27T15:52:52.232Z</updated>
    
    
    <summary type="html">&lt;p&gt;mock是一个模拟数据生成器，旨在帮助前端独立于后端进行开发，帮助编写单元测试。mock有如下功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据数据模板生成模板数据&lt;/li&gt;
&lt;li&gt;模拟ajax请求，生成请求数据&lt;/li&gt;
&lt;li&gt;基于html模板生成模拟数据&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="前端" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="MockJS" scheme="https://www.junpzx.cn/tags/MockJS/"/>
    
  </entry>
  
  <entry>
    <title>OSI七层模型与TCP/IP四层的区别/联系</title>
    <link href="https://www.junpzx.cn/posts/15594.html"/>
    <id>https://www.junpzx.cn/posts/15594.html</id>
    <published>2021-01-26T02:05:11.000Z</published>
    <updated>2021-03-22T01:57:11.089Z</updated>
    
    
    <summary type="html">&lt;p&gt;OSI（Open System Interconnect），即开放式系统互联。 一般都叫OSI参考模型，是ISO（国际标准化组织）组织在1985年研究的网络互连模型。ISO为了更好的使网络应用更为普及，推出了OSI参考模型。其含义就是推荐所有公司使用这个规范来控制网络。这样所有公司都有相同的规范，就能互联了。&lt;br&gt;OSI定义了网络互连的七层框架（物理层、数据链路层、网络层、传输层、会话层、表示层、应用层），即ISO开放互连系统参考模型。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="网络" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="OSI" scheme="https://www.junpzx.cn/tags/OSI/"/>
    
    <category term="TCP/IP" scheme="https://www.junpzx.cn/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>RPC远程调用</title>
    <link href="https://www.junpzx.cn/posts/50885.html"/>
    <id>https://www.junpzx.cn/posts/50885.html</id>
    <published>2021-01-25T08:12:49.000Z</published>
    <updated>2021-01-26T02:33:49.514Z</updated>
    
    
    <summary type="html">&lt;p&gt;在分布式计算&lt;strong&gt;，远程过程调用&lt;/strong&gt;（英语：Remote Procedure Call，缩写为 RPC）是一个计算机通信协议。该协议允许运行于一台计算机的程序调用另一个地址空间（通常为一个开放网络的一台计算机）的子程序，而程序员就像调用本地程序一样，无需额外地为这个交互作用编程（无需关注细节）。RPC是一种服务器-客户端（Client/Server）模式，经典实现是一个通过&lt;strong&gt;发送请求-接受回应&lt;/strong&gt;进行信息交互的系统。&lt;/p&gt;
&lt;p&gt;如果涉及的软件采用面向对象编程，那么远程过程调用亦可称作&lt;strong&gt;远程调用&lt;/strong&gt;或&lt;strong&gt;远程方法调用&lt;/strong&gt;，例：Java RMI。&lt;/p&gt;
&lt;p&gt;RPC是一种进程间通信的模式，程序分布在不同的地址空间里。如果在同一主机里，RPC可以通过不同的虚拟地址空间（即便使用相同的物理地址）进行通讯，而在不同的主机间，则通过不同的物理地址进行交互。许多技术（常常是不兼容）都是基于这种概念而实现的。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="网络" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="RPC" scheme="https://www.junpzx.cn/tags/RPC/"/>
    
  </entry>
  
  <entry>
    <title>接口文档工具之Swagger2</title>
    <link href="https://www.junpzx.cn/posts/4810.html"/>
    <id>https://www.junpzx.cn/posts/4810.html</id>
    <published>2021-01-18T02:30:09.000Z</published>
    <updated>2021-01-18T06:18:01.322Z</updated>
    
    
    <summary type="html">&lt;p&gt;Swagger 是一套围绕 OpenAPI 规范构建的开源工具，可以帮助您设计，构建，记录和使用 REST API。&lt;/p&gt;
&lt;p&gt;Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。Swagger 的目标是对 REST API &lt;strong&gt;定义一个标准的和语言无关的接口&lt;/strong&gt;，可让人和计算机无需访问源码、文档或网络流量监测就可以发现和理解服务的能力。当通过 Swagger 进行正确定义，用户可以理解远程服务并使用最少实现逻辑与远程服务进行交互。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20210118102344.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="Swagger2" scheme="https://www.junpzx.cn/tags/Swagger2/"/>
    
  </entry>
  
  <entry>
    <title>Swagger2注解说明</title>
    <link href="https://www.junpzx.cn/posts/63365.html"/>
    <id>https://www.junpzx.cn/posts/63365.html</id>
    <published>2021-01-18T02:16:03.000Z</published>
    <updated>2021-02-01T13:51:15.866Z</updated>
    
    
    <summary type="html">&lt;p&gt;Swagger2中的注解及其参数的作用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20210118102344.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="Swagger2" scheme="https://www.junpzx.cn/tags/Swagger2/"/>
    
  </entry>
  
  <entry>
    <title>Java8新特性之Stream用法</title>
    <link href="https://www.junpzx.cn/posts/56916.html"/>
    <id>https://www.junpzx.cn/posts/56916.html</id>
    <published>2021-01-14T02:14:11.000Z</published>
    <updated>2021-01-14T03:46:40.836Z</updated>
    
    
    <summary type="html">&lt;p&gt;Stream 是 Java8 中处理集合的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行非常复杂的查找、过滤和映射数据等操作。使用Stream API 对集合数据进行操作，就类似于使用 SQL 执行的数据库查询。也可以使用 Stream API 来并行执行操作。简而言之，Stream API 提供了一种高效且易于使用的处理数据的方式。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="后端" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://www.junpzx.cn/tags/Java/"/>
    
    <category term="JDK8" scheme="https://www.junpzx.cn/tags/JDK8/"/>
    
  </entry>
  
  <entry>
    <title>Idea常用快捷键整理</title>
    <link href="https://www.junpzx.cn/posts/28406.html"/>
    <id>https://www.junpzx.cn/posts/28406.html</id>
    <published>2021-01-13T07:30:56.000Z</published>
    <updated>2021-05-06T07:41:14.214Z</updated>
    
    
    <summary type="html">&lt;p&gt;整理学习和工作过程中经常使用的一些快捷键&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="Idea" scheme="https://www.junpzx.cn/tags/Idea/"/>
    
  </entry>
  
  <entry>
    <title>markdown语法</title>
    <link href="https://www.junpzx.cn/posts/47193.html"/>
    <id>https://www.junpzx.cn/posts/47193.html</id>
    <published>2021-01-11T06:14:03.000Z</published>
    <updated>2021-01-14T02:57:38.810Z</updated>
    
    
    <summary type="html">&lt;p&gt;.md即markdown文件的基本常用编写语法,是一种快速标记、快速排版语言，现在很多前段项目中的说明文件readme等都是用.md文件编写的，而且很多企业也在在鼓励使用这种编辑方式，下面大致介绍一下其语法。&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="markdown" scheme="https://www.junpzx.cn/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Jackson的简单使用</title>
    <link href="https://www.junpzx.cn/posts/4168.html"/>
    <id>https://www.junpzx.cn/posts/4168.html</id>
    <published>2021-01-11T03:35:56.000Z</published>
    <updated>2021-01-14T02:57:38.827Z</updated>
    
    
    <summary type="html">&lt;p&gt;Jackson可以轻松的将Java对象转换成json对象和xml文档，同样也可以将json、xml转换成Java对象ObjectMapper类是Jackson库的主要类。它称ObjectMapper的原因是因为它将JSON映射到Java对象（反序列化），或将Java对象映射到JSON（序列化）。它使用JsonParser和JsonGenerator的实例实现JSON实际的读/写。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="后端" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Jackson" scheme="https://www.junpzx.cn/tags/Jackson/"/>
    
  </entry>
  
  <entry>
    <title>接口文档工具之ShowDoc简单使用</title>
    <link href="https://www.junpzx.cn/posts/19954.html"/>
    <id>https://www.junpzx.cn/posts/19954.html</id>
    <published>2021-01-07T07:18:17.000Z</published>
    <updated>2021-01-14T02:57:38.813Z</updated>
    
    
    <summary type="html">&lt;p&gt;一个非常适合IT团队的在线API文档、技术文档工具。&lt;/p&gt;
&lt;p&gt;对于写API文档这件事，虽然说文本编辑软件或者接口管理软件能在某种程度上提高我们的效率，但我们依然可以试图借助技术的力量，更自动化地生成API文档，释放自己的生产力。&lt;br&gt;为此，showdoc官方提供了一种自动化解决方案。在代码里编写特定格式的程序注释&amp;lt;，然后showdoc通过读取这些注释来自动生成文档。由于这种方式不跟特定的语言耦合，因此它的使用范围相当广泛，可以支持c++、java、php、node等等常见的主流语言。&lt;br&gt;采用这种方式，尽管我们在第一次填写注释的时候可能会有些繁琐，但是它后期带来的可维护性是非常高的。代码变动后，不需要再额外登录showdoc，直接在代码里修改注释即可。同时自动化的脚本也可以加入持续集成或者某些自动化工程里，让“写API文档”这件事如”单元测试”般纳入工程工作流里面。&lt;/p&gt;</summary>
    
    
    
    <category term="使用说明" scheme="https://www.junpzx.cn/categories/%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    
    
    <category term="ShowDoc" scheme="https://www.junpzx.cn/tags/ShowDoc/"/>
    
  </entry>
  
  <entry>
    <title>Idea插件之Jrebel激活</title>
    <link href="https://www.junpzx.cn/posts/17262.html"/>
    <id>https://www.junpzx.cn/posts/17262.html</id>
    <published>2021-01-04T08:29:52.000Z</published>
    <updated>2021-01-18T06:19:18.806Z</updated>
    
    
    <summary type="html">&lt;p&gt;Jrebel是一款JVM插件，它使得Java代码修改后不用重启系统，立即生效。IDEA上原生是不支持热部署的，一般更新了 Java 文件后要手动重启 Tomcat 服务器，才能生效，浪费时间浪费生命。&lt;/p&gt;
&lt;p&gt;目前对于idea热部署最好的解决方案就是安装JRebel插件。&lt;/p&gt;
&lt;p&gt;下面介绍一下JRebel的激活步骤！&lt;/p&gt;</summary>
    
    
    
    <category term="激活教程" scheme="https://www.junpzx.cn/categories/%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Idea" scheme="https://www.junpzx.cn/tags/Idea/"/>
    
    <category term="JRebel" scheme="https://www.junpzx.cn/tags/JRebel/"/>
    
    <category term="XRebel" scheme="https://www.junpzx.cn/tags/XRebel/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之代理模式</title>
    <link href="https://www.junpzx.cn/posts/64715.html"/>
    <id>https://www.junpzx.cn/posts/64715.html</id>
    <published>2020-12-29T10:46:02.000Z</published>
    <updated>2021-01-14T02:57:38.815Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20201229191906.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="设计模式" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="结构型设计模式" scheme="https://www.junpzx.cn/tags/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之享元模式</title>
    <link href="https://www.junpzx.cn/posts/47555.html"/>
    <id>https://www.junpzx.cn/posts/47555.html</id>
    <published>2020-12-29T10:45:52.000Z</published>
    <updated>2021-01-14T02:57:38.815Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20201229191235.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="设计模式" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="结构型设计模式" scheme="https://www.junpzx.cn/tags/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之享元模式</title>
    <link href="https://www.junpzx.cn/posts/47556.html"/>
    <id>https://www.junpzx.cn/posts/47556.html</id>
    <published>2020-12-29T10:45:52.000Z</published>
    <updated>2021-01-14T02:57:38.817Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20201228140759.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="设计模式" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="结构型设计模式" scheme="https://www.junpzx.cn/tags/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之外观模式</title>
    <link href="https://www.junpzx.cn/posts/50692.html"/>
    <id>https://www.junpzx.cn/posts/50692.html</id>
    <published>2020-12-29T10:45:38.000Z</published>
    <updated>2021-01-14T02:57:38.818Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20201229190745.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="设计模式" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="结构型设计模式" scheme="https://www.junpzx.cn/tags/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之装饰模式</title>
    <link href="https://www.junpzx.cn/posts/29085.html"/>
    <id>https://www.junpzx.cn/posts/29085.html</id>
    <published>2020-12-29T10:45:24.000Z</published>
    <updated>2021-05-06T07:47:26.931Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://gitee.com/junpzx/blog-img/raw/master//img/20201229185815.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="设计模式" scheme="https://www.junpzx.cn/categories/%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
    <category term="结构型设计模式" scheme="https://www.junpzx.cn/tags/%E7%BB%93%E6%9E%84%E5%9E%8B%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
